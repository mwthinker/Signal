name: CI
on: [push, workflow_dispatch]

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            preset: 'windows'
          - os: ubuntu-latest
            preset: 'unix'

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set C++ VCPKG_ROOT
        shell: bash
        run: echo VCPKG_ROOT="$VCPKG_INSTALLATION_ROOT" >> "$GITHUB_ENV"; cat "$GITHUB_ENV"

      - name: Run CMake DEBUG
        shell: bash
        run: cmake --preset=${{ matrix.preset }} -B build_debug -DSignal_Test=1 -DSignal_Example=1 -DCMAKE_VERBOSE_MAKEFILE=1 -DCMAKE_BUILD_TYPE=Debug

      - name: Compile binaries DEBUG
        shell: bash
        run: cmake --build build_debug

      - name: Run tests DEBUG
        shell: bash
        run: ctest --rerun-failed --output-on-failure --test-dir build_debug/Signal_Test

      - name: Run code coverage
        shell: bash
        run: |
          sudo apt-get install lcov
          cd build_debug
          lcov -c -d . -b ../src --no-external -o lcov.info
        if: runner.os == 'Linux'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./build_debug/
          files: ./lcov.info
        if: runner.os == 'Linux'

      - name: Run example on Linux/macOS DEBUG
        shell: bash
        run: ./build_debug/Signal_Example/Signal_Example
        if: runner.os == 'Linux' || runner.os == 'macOS'

      - name: Run CMake RELEASE
        shell: bash
        run: cmake --preset=${{ matrix.preset }} -B build_release -DSignal_Test=1 -DSignal_Example=1 -DCMAKE_VERBOSE_MAKEFILE=1 -DCMAKE_BUILD_TYPE=Release

      - name: Compile binaries RELEASE
        shell: bash
        run: cmake --build build_release

      - name: Run tests RELEASE
        shell: bash
        run: ctest --rerun-failed --output-on-failure --test-dir build_release/Signal_Test

      - name: Run example on Linux/macOS RELEASE
        shell: bash
        run: ./build_release/Signal_Example/Signal_Example
        if: runner.os == 'Linux' || runner.os == 'macOS'
